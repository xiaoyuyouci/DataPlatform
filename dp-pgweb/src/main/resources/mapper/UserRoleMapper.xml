<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.winsafe.dao.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.winsafe.model.UserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="creationTime" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modificationTime" property="modificationTime" jdbcType="TIMESTAMP" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="roleId" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, creator, creationTime, modifier, modificationTime, userId, roleId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userrole
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userrole
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.winsafe.model.UserRole" >
    insert into userrole (id, creator, creationTime, 
      modifier, modificationTime, userId, 
      roleId)
    values (#{id,jdbcType=INTEGER}, #{creator,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{modifier,jdbcType=INTEGER}, #{modificationTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.winsafe.model.UserRole" >
    insert into userrole
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="creationTime != null" >
        creationTime,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modificationTime != null" >
        modificationTime,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="roleId != null" >
        roleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="modificationTime != null" >
        #{modificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.winsafe.model.UserRole" >
    update userrole
    <set >
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        creationTime = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="modificationTime != null" >
        modificationTime = #{modificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        roleId = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.winsafe.model.UserRole" >
    update userrole
    set creator = #{creator,jdbcType=INTEGER},
      creationTime = #{creationTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=INTEGER},
      modificationTime = #{modificationTime,jdbcType=TIMESTAMP},
      userId = #{userId,jdbcType=INTEGER},
      roleId = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  	<resultMap type="com.winsafe.model.UserRole" id="UserRoleResultMap">  
        <id column="id" property="id"/>  
        <result column="roleId" property="roleId"/>  
        <result column="userId" property="userId"/>  
        <association property="user" javaType="com.winsafe.model.User">  
            <id column="u_id" property="id"/>  
            <result column="u_name" property="loginName"/>  
        </association> 
        <association property="role" javaType="com.winsafe.model.Role">  
            <id column="r_id" property="id"/>  
            <result column="r_name" property="name"/>  
        </association>  
    </resultMap>
    
	<select id="selectUserRoleFetchUserAndRole" resultMap="UserRoleResultMap" parameterType="UserRole">  
		select ur.id, ur.userid, ur.roleid, u.id as u_id, u.loginname as u_name, r.id as r_id, r.name as r_name from    
		(
		select * from userrole
		<where>
			<if test="id != null"> and id=#{id, jdbcType=INTEGER}</if>
			<if test="roleId != null"> and roleId=#{roleId, jdbcType=INTEGER}</if>
			<if test="userId != null"> and userId=#{userId, jdbcType=INTEGER}</if>
		</where>
		)  ur, user u, role r where ur.userid=u.id and ur.roleid=r.id
	</select>
  
  
    <select id="selectUserRoleList" parameterType="UserRole" resultType="UserRole">
	select * from userrole
	<where>
		<if test="id != null"> and id=#{id, jdbcType=INTEGER}</if>
		<if test="roleId != null"> and roleId=#{roleId, jdbcType=INTEGER}</if>
		<if test="userId != null"> and userId=#{userId, jdbcType=INTEGER}</if>
		<if test="searchVal != null and searchVal !=''"> and (roleId in (select id from role where name like '%${searchVal}%') )</if>
	</where>
  </select>
  
  <insert id="insertUserRoleList" parameterType="java.util.List">
  	<trim prefix="insert into userrole (" suffix=") " suffixOverrides=",">
        userId,
        roleId,
    </trim>
    <trim prefix="values " suffixOverrides=",">
        <foreach collection="list" index="index" item="item" separator=",">
            <trim suffix=")" prefix="(" suffixOverrides=",">
                <if test="item.userId != null">
                    #{item.userId,jdbcType=INTEGER},
                </if>
                <if test="item.roleId != null">
                    #{item.roleId,jdbcType=INTEGER},
                </if>
            </trim>
        </foreach>
    </trim>
  </insert>
  
  <delete id="deleteUserRoleList" parameterType="java.util.List">
    <trim prefix="delete ur from userrole ur, (" suffix=") as t where ur.userid=t.userid and ur.roleid=t.roleid">
        <foreach collection="list" index="index" item="item" separator="union all">
            <trim suffix="" prefix="" suffixOverrides="">
            	select #{item.userId,jdbcType=INTEGER} as userid, #{item.roleId,jdbcType=INTEGER} as roleid
            </trim>
        </foreach>
    </trim>
  </delete>
  
  <delete id="deleteByRoleId" parameterType="java.lang.Integer">
  	delete from userrole where roleid=#{roleId, jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByUserId" parameterType="java.lang.Integer">
  	delete from userrole where userid=#{userId, jdbcType=INTEGER}
  </delete>
  
</mapper>